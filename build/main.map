{"version":3,"sources":["webpack:///webpack/bootstrap a3e72457723c585f7f76","webpack:///external \"express\"","webpack:///./src/database/index.js","webpack:///./node_modules/babel-runtime/regenerator/index.js","webpack:///./src/index.js","webpack:///external \"body-parser\"","webpack:///external \"morgan\"","webpack:///external \"express-session\"","webpack:///external \"express-mysql-session\"","webpack:///external \"mysql\"","webpack:///./src/router.js","webpack:///./src/entities/auth/router.js","webpack:///external \"regenerator-runtime\"","webpack:///./src/entities/auth/controller.js","webpack:///./src/entities/extensions/router.js","webpack:///./src/entities/extensions/controller.js","webpack:///./src/entities/publications/router.js","webpack:///./src/entities/publications/controller.js","webpack:///./src/entities/studyload/router.js","webpack:///./src/entities/studyload/controller.js","webpack:///./src/entities/teachload/router.js","webpack:///./src/entities/teachload/controller.js"],"names":["db","mysql","createConnection","host","user","password","dateStrings","connect","err","console","log","query","app","express","MySQLStore","store","sessionStore","use","bodyParser","json","urlencoded","encoded","logger","session","key","secret","resave","saveUninitialized","createDatabaseTable","checkExpirationInterval","expiration","port","process","env","PORT","server","listen","router","Router","post","req","res","body","status","message","data","login","username","Promise","resolve","reject","queryString","values","rows","length","get","services","params","service","category","title","no_of_hours","no_of_participants","role","credits","id","serviceAdded","delete","put","serviceEdited","getService","getServices","addService","emp_id","results","insertId","removeService","affectedRows","editService","publication","publications","credit_units","funding","start_date","end_date","publication_id","row","getPublication","getPublications","addPublication","addCoworker","coworker_id","checkIfExisting","removePublication","editPublication","degree","university","isFullTime","subject_code","studyload_id","sample","book","subjects","addStudyLoad","removeStudyLoad","editStudyLoad","getStudyLoad","getAllStudyLoad","noOfStudents","teachingload_id","teachload_id","addTeachLoad","removeTeachLoad","editTeachLoad","getTeachLoad","getAllTeachLoad"],"mappings":";;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA,oC;;;;;;;;;ACAA;;AAEA,IAAMA,KAAK,6CAAAC,CAAMC,gBAAN,CAAuB;AAChCC,QAAM,WAD0B;AAEhCC,QAAM,QAF0B;AAGhCC,YAAU,QAHsB;AAIhCL,MAAI,QAJ4B;AAKhCM,eAAa;AALmB,CAAvB,CAAX;;AAQAN,GAAGO,OAAH,CAAW,eAAO;AAChB,MAAIC,GAAJ,EAAS;AACPC,YAAQC,GAAR,CAAY,iCAAZ;AACAD,YAAQC,GAAR,CAAYF,GAAZ;AACD,GAHD,MAGO;AACLC,YAAQC,GAAR,CAAY,mCAAZ;AACD;AACF,CAPD;;AASAV,GAAGW,KAAH,CAAS,YAAT;;AAEA,yDAAeX,EAAf,E;;;;;;ACrBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMY,MAAM,+CAAAC,EAAZ;AACA,IAAMC,aAAa,6DAAAC,CAAM,uDAAN,CAAnB;AACA,IAAMC,eAAe,IAAIF,UAAJ,CAAe,EAAf,EAAmB,0DAAnB,CAArB;;AAEAF,IAAIK,GAAJ,CAAQ,mDAAAC,CAAWC,IAAX,EAAR;AACAP,IAAIK,GAAJ,CAAQ,mDAAAC,CAAWE,UAAX,CAAsB,EAAEC,SAAS,IAAX,EAAtB,CAAR;AACAT,IAAIK,GAAJ,CAAQ,8CAAAK,CAAO,KAAP,CAAR;;AAEAV,IAAIK,GAAJ,CACE,uDAAAM,CAAQ;AACNC,OAAK,QADC;AAENC,UAAQ,QAFF;AAGNC,UAAQ,IAHF;AAINC,qBAAmB,IAJb;AAKNZ,SAAOC,YALD;AAMNY,uBAAqB,IANf;AAONC,2BAAyB,MAPnB;AAQNC,cAAY;AARN,CAAR,CADF;;AAaAlB,IAAIK,GAAJ,CAAQ,wDAAR;;AAEA,IAAMc,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;;AAEA,IAAMC,SAASvB,IAAIwB,MAAJ,CAAWL,IAAX,EAAiB,YAAM;AACpCtB,UAAQC,GAAR,iCAA0CqB,IAA1C;AACD,CAFc,CAAf;;AAIA,+DAAeI,MAAf,E;;;;;;ACrCA,wC;;;;;;ACAA,mC;;;;;;ACAA,4C;;;;;;ACAA,kD;;;;;;ACAA,kC;;;;;;;;;;;;;;ACAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAME,SAAS,uDAAAC,EAAf;;AAEA;AACAD,OAAOpB,GAAP,CAAW,GAAX,EAAgB,sEAAhB;AACAoB,OAAOpB,GAAP,CAAW,4EAAX;AACAoB,OAAOpB,GAAP,CAAW,8EAAX;AACA;AACAoB,OAAOpB,GAAP,CAAW,2EAAX;AACAoB,OAAOpB,GAAP,CAAW,2EAAX;;AAEA,yDAAeoB,MAAf,E;;;;;;;;;;;;;;;;;;ACpBA;AACA;;AAEA,IAAMA,SAAS,uDAAAC,EAAf;;AAEAD,OAAOE,IAAP,CAAY,YAAZ;AAAA,oLAA0B,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEH,2DAAWD,IAAIE,IAAf,CAFG;;AAAA;AAEhBtC,gBAFgB;;AAGtBoC,gBAAIjB,OAAJ,CAAYnB,IAAZ,GAAmBA,IAAnB;AACAqC,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBC,uBAAS,wBAFU;AAGnBC,oBAAMzC;AAHa,aAArB;AAJsB;AAAA;;AAAA;AAAA;AAAA;AAUlBwC,mBAVkB,GAUR,EAVQ;AAAA;AAAA,4CAYf,GAZe,wBAef,GAfe;AAAA;;AAAA;AAalBA,sBAAU,wCAAV;AAbkB;;AAAA;AAgBlBA,sBAAU,mBAAV;AAhBkB;;AAAA;AAmBtBH,gBAAIE,MAAJ,cAAmBxB,IAAnB,CAAwB,EAAEwB,mBAAF,EAAUC,gBAAV,EAAxB;;AAnBsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;AAuBAP,OAAOE,IAAP,CAAY,aAAZ,EAA2B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvCD,MAAIjB,OAAJ,CAAYnB,IAAZ,GAAmB,IAAnB;AACAqC,MAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,YAAQ,GADW;AAEnBC,aAAS;AAFU,GAArB;AAID,CAND;;AAQAP,OAAOE,IAAP,CAAY,cAAZ,EAA4B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACxCA,MAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,YAAQ,GADW;AAEnBC,aAAS,sCAFU;AAGnBC,UAAML,IAAIjB,OAAJ,CAAYnB,IAAZ,GAAmBoC,IAAIjB,OAAJ,CAAYnB,IAA/B,GAAsC;AAHzB,GAArB;AAKD,CAND;;AAQA,yDAAeiC,MAAf,E;;;;;;AC5CA,gD;;;;;;;;;ACAA;;AAEO,IAAMS,QAAQ,SAARA,KAAQ,OAA4B;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAf1C,QAAe,QAAfA,QAAe;;AAC/C,SAAO,IAAI2C,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,yJAAN;;AAUA,QAAMC,SAAS,CAACL,QAAD,EAAW1C,QAAX,CAAf;;AAEAL,IAAA,0DAAAA,CAAGW,KAAH,CAASwC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAM6C,IAAN,EAAe;AAC3C,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACG,KAAKC,MAAV,EAAkB;AAChB,eAAOJ,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,KAAK,CAAL,CAAR,CAAP;AACD,KAXD;AAYD,GAzBM,CAAP;AA0BD,CA3BM,C;;;;;;;;;;;;;;;;;;ACFP;AACA;;AAEA,IAAMhB,SAAS,uDAAAC,EAAf;;AAEA;AACAD,OAAOkB,GAAP,CAAW,cAAX;AAAA,oLAA2B,iBAAOf,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEA,kEAFA;;AAAA;AAEjBe,oBAFiB;;AAGvBf,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBC,uBAAS,mCAFU;AAGnBC,oBAAMW;AAHa,aAArB;AAHuB;AAAA;;AAAA;AAAA;AAAA;AASnBZ,mBATmB,GAST,EATS;AAAA;AAAA,4CAYhB,GAZgB;AAAA;;AAAA;AAanBA,sBAAU,uBAAV;AAbmB;;AAAA;;AAiBvBH,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,mBAAF,EAAUC,gBAAV,EAArB;;AAjBuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAAA;AAAA;AAAA;AAAA;;AAqBA;AACAP,OAAOkB,GAAP,CAAW,kBAAX;AAAA,qLAA+B,kBAAOf,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEL,gEAAgBD,IAAIiB,MAApB,CAFK;;AAAA;AAErBC,mBAFqB;;AAG3BjB,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBC,uBAAS,8BAFU;AAGnBC,oBAAMa;AAHa,aAArB;AAH2B;AAAA;;AAAA;AAAA;AAAA;AASvBd,mBATuB,GASb,EATa;AAAA;AAAA,8CAWpB,GAXoB,yBAcpB,GAdoB;AAAA;;AAAA;AAYvBA,sBAAU,mBAAV;AAZuB;;AAAA;AAevBA,sBAAU,uBAAV;AAfuB;;AAAA;AAkB3BH,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUC,gBAAV,EAAxB;;AAlB2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAAA;AAAA;AAAA;AAAA;;AAsBA;AACAP,OAAOE,IAAP,CAAY,cAAZ;AAAA,qLAA4B,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAExBD,IAAIE,IAAJ,CAASiB,QAAT,IACAnB,IAAIE,IAAJ,CAASkB,KADT,IAEApB,IAAIE,IAAJ,CAASmB,WAAT,IAAwB,CAFxB,IAGArB,IAAIE,IAAJ,CAASoB,kBAAT,IAA+B,CAH/B,IAIAtB,IAAIE,IAAJ,CAASqB,IAJT,IAKAvB,IAAIE,IAAJ,CAASsB,OAAT,IAAoB,CAPI;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAUL,gEAAgBxB,IAAIE,IAApB,CAVK;;AAAA;AAUhBuB,cAVgB;AAAA;AAAA,mBAWK,gEAAgB,EAAEA,IAAIA,EAAN,EAAhB,CAXL;;AAAA;AAWhBC,wBAXgB;;;AAatBzB,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBC,uBAAS,6BAFU;AAGnBC,oBAAMqB;AAHa,aAArB;AAbsB;AAAA;;AAAA;AAAA;AAAA;;AAmBtBzB,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAeC,SAAS,uBAAxB,EAArB;;AAnBsB;AAAA;AAAA;;AAAA;AAsBxBH,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAeC,SAAS,aAAxB,EAArB;;AAtBwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;;AA0BA;AACAP,OAAO8B,MAAP,CAAc,kBAAd;AAAA,qLAAkC,kBAAO3B,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAER,gEAAgBD,IAAIiB,MAApB,CAFQ;;AAAA;AAExBC,mBAFwB;AAAA;AAAA,mBAGxB,mEAAmBlB,IAAIiB,MAAvB,CAHwB;;AAAA;;AAK9BhB,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBC,uBAAS,6BAFU;AAGnBC,oBAAMa;AAHa,aAArB;AAL8B;AAAA;;AAAA;AAAA;AAAA;AAW1Bd,mBAX0B,GAWhB,EAXgB;AAAA;AAAA,8CAavB,GAbuB,yBAgBvB,GAhBuB;AAAA;;AAAA;AAc1BA,sBAAU,kCAAV;AAd0B;;AAAA;AAiB1BA,sBAAU,uBAAV;AAjB0B;;AAAA;AAoB9BH,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUC,gBAAV,EAAxB;;AApB8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlC;;AAAA;AAAA;AAAA;AAAA;;AAyBA;AACAP,OAAO+B,GAAP,CAAW,eAAX;AAAA,qLAA4B,kBAAO5B,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAElB,iEAAiBD,IAAIE,IAArB,CAFkB;;AAAA;AAAA;AAAA,mBAGI,gEAAgB,EAAEuB,IAAIzB,IAAIE,IAAJ,CAASuB,EAAf,EAAhB,CAHJ;;AAAA;AAGlBI,yBAHkB;;;AAKxB5B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBC,uBAAS,6BAFU;AAGnBC,oBAAMwB;AAHa,aAArB;AALwB;AAAA;;AAAA;AAAA;AAAA;AAWpBzB,mBAXoB,GAWV,EAXU;AAAA;AAAA,8CAajB,GAbiB,yBAgBjB,GAhBiB;AAAA;;AAAA;AAcpBA,sBAAU,mBAAV;AAdoB;;AAAA;AAiBpBA,sBAAU,uBAAV;AAjBoB;;AAAA;AAoBxBH,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUC,gBAAV,EAAxB;;AApBwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;;AAwBA,yDAAeP,MAAf,E;;;;;;;;;;;;;AChIA;;AAEA;AACO,IAAMiC,aAAa,SAAbA,UAAa,OAAY;AAAA,MAATL,EAAS,QAATA,EAAS;;AACpC,SAAO,IAAIjB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,+IAAN;;AASAnD,IAAA,0DAAAA,CAAGW,KAAH,CAASwC,WAAT,EAAsBc,EAAtB,EAA0B,UAACzD,GAAD,EAAM6C,IAAN,EAAe;AACvC,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACG,KAAKC,MAAV,EAAkB;AAChB,eAAOJ,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,KAAK,CAAL,CAAR,CAAP;AACD,KAXD;AAYD,GAtBM,CAAP;AAuBD,CAxBM;;AA0BP;AACO,IAAMkB,cAAc,SAAdA,WAAc,GAAM;AAC/B,SAAO,IAAIvB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,0DAAN;;AAKAnD,IAAA,0DAAAA,CAAGW,KAAH,CAASwC,WAAT,EAAsB,UAAC3C,GAAD,EAAM6C,IAAN,EAAe;AACnC,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,IAAR,CAAP;AACD,KAPD;AAQD,GAdM,CAAP;AAeD,CAhBM;;AAkBP;AACO,IAAMmB,aAAa,SAAbA,UAAa,QAQpB;AAAA,MAPJb,QAOI,SAPJA,QAOI;AAAA,MANJC,KAMI,SANJA,KAMI;AAAA,MALJC,WAKI,SALJA,WAKI;AAAA,MAJJC,kBAII,SAJJA,kBAII;AAAA,MAHJC,IAGI,SAHJA,IAGI;AAAA,MAFJC,OAEI,SAFJA,OAEI;AAAA,MADJS,MACI,SADJA,MACI;;AACJ,SAAO,IAAIzB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,6GAAN;;AAKA,QAAMC,SAAS,CACbO,QADa,EAEbC,KAFa,EAGbC,WAHa,EAIbC,kBAJa,EAKbC,IALa,EAMbC,OANa,EAObS,MAPa,CAAf;;AAUAzE,IAAA,0DAAAA,CAAGW,KAAH,CAASwC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAMkE,OAAN,EAAkB;AAC9C,UAAIlE,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQyB,QAAQC,QAAhB,CAAP;AACD,KAPD;AAQD,GAxBM,CAAP;AAyBD,CAlCM;;AAoCP;AACO,IAAMC,gBAAgB,SAAhBA,aAAgB,QAAY;AAAA,MAATX,EAAS,SAATA,EAAS;;AACvC,SAAO,IAAIjB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,iGAAN;;AAOAnD,IAAA,0DAAAA,CAAGW,KAAH,CAASwC,WAAT,EAAsBc,EAAtB,EAA0B,UAACzD,GAAD,EAAMkE,OAAN,EAAkB;AAC1C,UAAIlE,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACwB,QAAQG,YAAb,EAA2B;AACzB,eAAO3B,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,SAAP;AACD,KAXD;AAYD,GApBM,CAAP;AAqBD,CAtBM;;AAwBP;AACO,IAAM6B,cAAc,SAAdA,WAAc,QAOrB;AAAA,MANJnB,QAMI,SANJA,QAMI;AAAA,MALJC,KAKI,SALJA,KAKI;AAAA,MAJJC,WAII,SAJJA,WAII;AAAA,MAHJC,kBAGI,SAHJA,kBAGI;AAAA,MAFJC,IAEI,SAFJA,IAEI;AAAA,MADJC,OACI,SADJA,OACI;;AACJ,SAAO,IAAIhB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,yOAAN;;AAaA,QAAMC,SAAS,CACbO,QADa,EAEbC,KAFa,EAGbC,WAHa,EAIbC,kBAJa,EAKbC,IALa,EAMbC,OANa,CAAf;;AASAhE,IAAA,0DAAAA,CAAGW,KAAH,CAASwC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAMiC,GAAN,EAAc;AAC1C,UAAIjC,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACT,IAAIoC,YAAT,EAAuB;AACrB,eAAO3B,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,SAAP;AACD,KAXD;AAYD,GAnCM,CAAP;AAoCD,CA5CM,C;;;;;;;;;;;;;;;;;;AC/GP;AACA;;AAEA,IAAMZ,SAAS,uDAAAC,EAAf;;AAEA;AACAD,OAAOkB,GAAP,CAAW,sBAAX;AAAA,oLAAmC,iBAAOf,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEL,oEAAoBD,IAAIiB,MAAxB,CAFK;;AAAA;AAEzBsB,uBAFyB;;AAG/BtC,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBC,uBAAS,kCAFU;AAGnBC,oBAAMkC;AAHa,aAArB;AAH+B;AAAA;;AAAA;AAAA;AAAA;AAS3BnC,mBAT2B,GASjB,EATiB;AAAA;AAAA,4CAWxB,GAXwB,wBAcxB,GAdwB;AAAA;;AAAA;AAY3BA,sBAAU,uBAAV;AAZ2B;;AAAA;AAe3BA,sBAAU,uBAAV;AAf2B;;AAAA;AAkB/BH,gBAAIE,MAAJ,cAAmBxB,IAAnB,CAAwB,EAAEwB,mBAAF,EAAUC,gBAAV,EAAxB;;AAlB+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnC;;AAAA;AAAA;AAAA;AAAA;;AAsBA;AACAP,OAAOkB,GAAP,CAAW,kBAAX;AAAA,qLAA+B,kBAAOf,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEA,sEAFA;;AAAA;AAErBuC,wBAFqB;;AAG3BvC,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBC,uBAAS,uCAFU;AAGnBC,oBAAMmC;AAHa,aAArB;AAH2B;AAAA;;AAAA;AAAA;AAAA;AASvBpC,mBATuB,GASb,EATa;AAAA;AAAA,8CAYpB,GAZoB;AAAA;;AAAA;AAavBA,sBAAU,uBAAV;AAbuB;;AAAA;;AAiB3BH,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,oBAAF,EAAUC,gBAAV,EAArB;;AAjB2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAAA;AAAA;AAAA;AAAA;;AAsBA;AACAP,OAAOE,IAAP,CAAY,kBAAZ;AAAA,qLAAgC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAE5BD,IAAIE,IAAJ,CAASuC,YAAT,IAAwB,CAAxB,IACAzC,IAAIE,IAAJ,CAASiB,QADT,IAEAnB,IAAIE,IAAJ,CAASwC,OAFT,IAGA1C,IAAIE,IAAJ,CAASkB,KAHT,IAIApB,IAAIE,IAAJ,CAASqB,IAJT,IAKAvB,IAAIE,IAAJ,CAASyC,UALT,IAMA3C,IAAIE,IAAJ,CAAS0C,QARmB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAWT,oEAAoB5C,IAAIE,IAAxB,CAXS;;AAAA;AAWpBuB,cAXoB;AAAA;AAAA,mBAYA,oEAAoB,EAAEA,IAAIA,EAAN,EAApB,CAZA;;AAAA;AAYpBc,uBAZoB;;;AAc1BtC,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBC,uBAAS,kCAFU;AAGnBC,oBAAMkC;AAHa,aAArB;AAd0B;AAAA;;AAAA;AAAA;AAAA;;AAoB1BtC,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAeC,SAAS,uBAAxB,EAArB;;AApB0B;AAAA;AAAA;;AAAA;AAuB5BH,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAeC,SAAS,aAAxB,EAArB;;AAvB4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhC;;AAAA;AAAA;AAAA;AAAA;;AA2BA;AACAP,OAAOE,IAAP,CAAY,kBAAZ;AAAA,qLAAgC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAE5BD,IAAIE,IAAJ,CAAS2C,cAFmB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAKpB,iEAAiB7C,IAAIE,IAArB,CALoB;;AAAA;AAMpB4C,eANoB,GAMd,qEAAqB9C,IAAIE,IAAzB,CANc;;;AAQ1BD,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBC,uBAAS,6BAFU;AAGnBC,oBAAMyC;AAHa,aAArB;AAR0B;AAAA;;AAAA;AAAA;AAAA;;AAc1B7C,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAeC,SAAS,uBAAxB,EAArB;;AAd0B;AAAA;AAAA;;AAAA;AAiB5BH,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAeC,SAAS,aAAxB,EAArB;;AAjB4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhC;;AAAA;AAAA;AAAA;AAAA;;AAqBA;AACAP,OAAO8B,MAAP,CAAc,sBAAd;AAAA,qLAAsC,kBAAO3B,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAER,oEAAoBD,IAAIiB,MAAxB,CAFQ;;AAAA;AAE5BsB,uBAF4B;AAAA;AAAA,mBAG5B,uEAAuBvC,IAAIiB,MAA3B,CAH4B;;AAAA;;AAKlChB,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBC,uBAAS,kCAFU;AAGnBC,oBAAMkC;AAHa,aAArB;AALkC;AAAA;;AAAA;AAAA;AAAA;AAW9BnC,mBAX8B,GAWpB,EAXoB;AAAA;AAAA,8CAa3B,GAb2B,yBAgB3B,GAhB2B;AAAA;;AAAA;AAc9BA,sBAAU,uBAAV;AAd8B;;AAAA;AAiB9BA,sBAAU,uBAAV;AAjB8B;;AAAA;AAoBlCH,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUC,gBAAV,EAAxB;;AApBkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtC;;AAAA;AAAA;AAAA;AAAA;;AAyBA;AACAP,OAAO+B,GAAP,CAAW,mBAAX;AAAA,qLAAgC,kBAAO5B,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEtB,qEAAqBD,IAAIE,IAAzB,CAFsB;;AAAA;AAAA;AAAA,mBAGF,oEAAoB,EAAEuB,IAAIzB,IAAIE,IAAJ,CAASuB,EAAf,EAApB,CAHE;;AAAA;AAGtBc,uBAHsB;;;AAK5BtC,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBC,uBAAS,iCAFU;AAGnBC,oBAAMkC;AAHa,aAArB;AAL4B;AAAA;;AAAA;AAAA;AAAA;AAWxBnC,mBAXwB,GAWd,EAXc;AAAA;AAAA,8CAarB,GAbqB,yBAgBrB,GAhBqB;AAAA;;AAAA;AAcxBA,sBAAU,uBAAV;AAdwB;;AAAA;AAiBxBA,sBAAU,uBAAV;AAjBwB;;AAAA;AAoB5BH,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUC,gBAAV,EAAxB;;AApB4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhC;;AAAA;AAAA;AAAA;AAAA;;AAwBA,yDAAeP,MAAf,E;;;;;;;;;;;;;;;ACxJA;;AAEA;AACO,IAAMkD,iBAAiB,SAAjBA,cAAiB,OAAY;AAAA,MAATtB,EAAS,QAATA,EAAS;;AACxC,SAAO,IAAIjB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,uJAAN;;AASAnD,IAAA,0DAAAA,CAAGW,KAAH,CAASwC,WAAT,EAAsBc,EAAtB,EAA0B,UAACzD,GAAD,EAAM6C,IAAN,EAAe;AACvC,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACG,KAAKC,MAAV,EAAkB;AAChB,eAAOJ,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,KAAK,CAAL,CAAR,CAAP;AACD,KAXD;AAYD,GAtBM,CAAP;AAuBD,CAxBM;;AA0BP;AACO,IAAMmC,kBAAkB,SAAlBA,eAAkB,GAAM;AACnC,SAAO,IAAIxC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,8DAAN;;AAKAnD,IAAA,0DAAAA,CAAGW,KAAH,CAASwC,WAAT,EAAsB,UAAC3C,GAAD,EAAM6C,IAAN,EAAe;AACnC,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,IAAR,CAAP;AACD,KAPD;AAQD,GAdM,CAAP;AAeD,CAhBM;;AAkBP;AACO,IAAMoC,iBAAiB,SAAjBA,cAAiB,QASxB;AAAA,MARJR,YAQI,SARJA,YAQI;AAAA,MAPJtB,QAOI,SAPJA,QAOI;AAAA,MANJuB,OAMI,SANJA,OAMI;AAAA,MALJtB,KAKI,SALJA,KAKI;AAAA,MAJJG,IAII,SAJJA,IAII;AAAA,MAHJoB,UAGI,SAHJA,UAGI;AAAA,MAFJC,QAEI,SAFJA,QAEI;AAAA,MADJX,MACI,SADJA,MACI;;AACJ,SAAO,IAAIzB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,qHAAN;;AAKA,QAAMC,SAAS,CACb6B,YADa,EAEbtB,QAFa,EAGbuB,OAHa,EAIbtB,KAJa,EAKbG,IALa,EAMboB,UANa,EAObC,QAPa,EAQbX,MARa,CAAf;;AAWAzE,IAAA,0DAAAA,CAAGW,KAAH,CAASwC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAMkE,OAAN,EAAkB;AAC9C,UAAIlE,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQyB,QAAQC,QAAhB,CAAP;AACD,KAPD;AAQD,GAzBM,CAAP;AA0BD,CApCM;;AAsCP;AACO,IAAMe,cAAc,SAAdA,WAAc,QAAqC;AAAA,MAAlCL,cAAkC,SAAlCA,cAAkC;AAAA,MAAlBM,WAAkB,SAAlBA,WAAkB;;AAC9D,SAAO,IAAI3C,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,uFAAN;;AAKA,QAAMC,SAAS,CAACiC,cAAD,EAAiBM,WAAjB,CAAf;;AAEA3F,IAAA,0DAAAA,CAAGW,KAAH,CAASwC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAMkE,OAAN,EAAkB;AAC9C,UAAIlE,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQyB,QAAQC,QAAhB,CAAP;AACD,KAPD;AAQD,GAhBM,CAAP;AAiBD,CAlBM;;AAoBP;AACO,IAAMiB,kBAAkB,SAAlBA,eAAkB,QAAqC;AAAA,MAAlCP,cAAkC,SAAlCA,cAAkC;AAAA,MAAlBM,WAAkB,SAAlBA,WAAkB;;AAClE,SAAO,IAAI3C,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,mJAAN;;AAOA,QAAMC,SAAS,CAACiC,cAAD,EAAiBM,WAAjB,CAAf;;AAEA3F,IAAA,0DAAAA,CAAGW,KAAH,CAASwC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAM6C,IAAN,EAAe;AAC3C,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,KAAK,CAAL,CAAR,CAAP;AACD,KAPD;AAQD,GAlBM,CAAP;AAmBD,CApBM;;AAsBP;AACO,IAAMwC,oBAAoB,SAApBA,iBAAoB,QAAY;AAAA,MAAT5B,EAAS,SAATA,EAAS;;AAC3C,SAAO,IAAIjB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,yGAAN;;AAOAnD,IAAA,0DAAAA,CAAGW,KAAH,CAASwC,WAAT,EAAsBc,EAAtB,EAA0B,UAACzD,GAAD,EAAMkE,OAAN,EAAkB;AAC1C,UAAIlE,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACwB,QAAQG,YAAb,EAA2B;AACzB,eAAO3B,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,SAAP;AACD,KAXD;AAYD,GApBM,CAAP;AAqBD,CAtBM;;AAwBP;AACO,IAAM6C,kBAAkB,SAAlBA,eAAkB,QAQzB;AAAA,MAPJb,YAOI,SAPJA,YAOI;AAAA,MANJtB,QAMI,SANJA,QAMI;AAAA,MALJuB,OAKI,SALJA,OAKI;AAAA,MAJJtB,KAII,SAJJA,KAII;AAAA,MAHJG,IAGI,SAHJA,IAGI;AAAA,MAFJoB,UAEI,SAFJA,UAEI;AAAA,MADJC,QACI,SADJA,QACI;;AACJ,SAAO,IAAIpC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,kQAAN;;AAcA,QAAMC,SAAS,CACb6B,YADa,EAEbtB,QAFa,EAGbuB,OAHa,EAIbtB,KAJa,EAKbG,IALa,EAMboB,UANa,EAObC,QAPa,CAAf;;AAUApF,IAAA,0DAAAA,CAAGW,KAAH,CAASwC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAMiC,GAAN,EAAc;AAC1C,UAAIjC,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACT,IAAIoC,YAAT,EAAuB;AACrB,eAAO3B,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,SAAP;AACD,KAXD;AAYD,GArCM,CAAP;AAsCD,CA/CM,C;;;;;;;;;;;;;;;;;;;;AC7JP;AACA;;AAEA,IAAMZ,SAAS,uDAAAC,EAAf;;AAEAD,OAAOE,IAAP,CAAY,oBAAZ;AAAA,oLAAkC,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAE9BD,IAAIE,IAAJ,CAASqD,MAAT,IACAvD,IAAIE,IAAJ,CAASsD,UADT,IAEAxD,IAAIE,IAAJ,CAASuD,UAFT,IAGAzD,IAAIE,IAAJ,CAASsB,OAHT,IAIAxB,IAAIE,IAAJ,CAAS+B,MAJT,IAKAjC,IAAIE,IAAJ,CAASwD,YAPqB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAYX,kEAAkB1D,IAAIE,IAAtB,CAZW;;AAAA;AAYtBuB,cAZsB;AAAA;AAAA,mBAaP,kEAAkB,EAAEkC,cAAclC,EAAhB,EAAlB,CAbO;;AAAA;AAatBmC,kBAbsB;;;AAe5B3D,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBC,uBAAS,iCAFU;AAGnBC,oBAAMuD;AAHa,aAArB;AAf4B;AAAA;;AAAA;AAAA;AAAA;;AAqB5B3D,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAeC,SAAS,uBAAxB,EAArB;;AArB4B;AAAA;AAAA;;AAAA;AAwB9BH,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAeC,SAAS,aAAxB,EAArB;;AAxB8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlC;;AAAA;AAAA;AAAA;AAAA;;AA4BAP,OAAO8B,MAAP,CAAc,qCAAd;AAAA,qLAAqD,kBAAO3B,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAE9B,kEAAkBD,IAAIiB,MAAtB,CAF8B;;AAAA;AAE3C4C,gBAF2C;AAAA;AAAA,mBAG3C,qEAAqB7D,IAAIiB,MAAzB,CAH2C;;AAAA;;AAKjDhB,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBC,uBAAS,iCAFU;AAGnBC,oBAAMwD;AAHa,aAArB;AALiD;AAAA;;AAAA;AAAA;AAAA;AAW7CzD,mBAX6C,GAWnC,EAXmC;AAAA;AAAA,8CAa1C,GAb0C,yBAgB1C,GAhB0C;AAAA;;AAAA;AAc7CA,sBAAU,sBAAV;AAd6C;;AAAA;AAiB7CA,sBAAU,uBAAV;AAjB6C;;AAAA;AAoBjDH,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUC,gBAAV,EAAxB;;AApBiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArD;;AAAA;AAAA;AAAA;AAAA;;AAwBAP,OAAO+B,GAAP,CAAW,qBAAX;AAAA,qLAAkC,kBAAO5B,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAExB,mEAAmBD,IAAIE,IAAvB,CAFwB;;AAAA;AAAA;AAAA,mBAGT,kEAAkB;AACrCyD,4BAAc3D,IAAIE,IAAJ,CAASyD;AADc,aAAlB,CAHS;;AAAA;AAGxBC,kBAHwB;;;AAO9B3D,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBC,uBAAS,gCAFU;AAGnBC,oBAAMuD;AAHa,aAArB;AAP8B;AAAA;;AAAA;AAAA;AAAA;AAa1BxD,mBAb0B,GAahB,EAbgB;AAAA;AAAA,8CAevB,GAfuB,yBAkBvB,GAlBuB;AAAA;;AAAA;AAgB1BA,sBAAU,sBAAV;AAhB0B;;AAAA;AAmB1BA,sBAAU,uBAAV;AAnB0B;;AAAA;AAsB9BH,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUC,gBAAV,EAAxB;;AAtB8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlC;;AAAA;AAAA;AAAA;AAAA;;AA0BAP,OAAOkB,GAAP,CAAW,mCAAX;AAAA,qLAAgD,kBAAOf,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEzB,kEAAkBD,IAAIiB,MAAtB,CAFyB;;AAAA;AAEtC4C,gBAFsC;;AAG5C5D,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBC,uBAAS,iCAFU;AAGnBC,oBAAMwD;AAHa,aAArB;AAH4C;AAAA;;AAAA;AAAA;AAAA;AASxCzD,mBATwC,GAS9B,EAT8B;AAAA;AAAA,8CAWrC,GAXqC,yBAcrC,GAdqC;AAAA;;AAAA;AAYxCA,sBAAU,sBAAV;AAZwC;;AAAA;AAexCA,sBAAU,uBAAV;AAfwC;;AAAA;AAkB5CH,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUC,gBAAV,EAAxB;;AAlB4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhD;;AAAA;AAAA;AAAA;AAAA;;AAsBAP,OAAOkB,GAAP,CAAW,wBAAX;AAAA,qLAAqC,kBAAOf,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEV,sEAFU;;AAAA;AAE3B6D,oBAF2B;;AAGjC7D,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBC,uBAAS,oCAFU;AAGnBC,oBAAMyD;AAHa,aAArB;AAHiC;AAAA;;AAAA;AAAA;AAAA;AAS7B1D,mBAT6B,GASnB,EATmB;AAAA;AAAA,8CAY1B,GAZ0B;AAAA;;AAAA;AAa7BA,sBAAU,uBAAV;AAb6B;;AAAA;;AAiBjCH,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,oBAAF,EAAUC,gBAAV,EAArB;;AAjBiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArC;;AAAA;AAAA;AAAA;AAAA;;AAqBA,yDAAeP,MAAf,E;;;;;;;;;;;;;AC9HA;;AAEO,IAAMkE,eAAe,SAAfA,YAAe,OAOtB;AAAA,MANJR,MAMI,QANJA,MAMI;AAAA,MALJC,UAKI,QALJA,UAKI;AAAA,MAJJC,UAII,QAJJA,UAII;AAAA,MAHJjC,OAGI,QAHJA,OAGI;AAAA,MAFJS,MAEI,QAFJA,MAEI;AAAA,MADJyB,YACI,QADJA,YACI;;AACJ,SAAO,IAAIlD,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,yKAAN;;AAQA,QAAMC,SAAS,CACb2C,MADa,EAEbC,UAFa,EAGbC,UAHa,EAIbjC,OAJa,EAKbS,MALa,EAMbyB,YANa,CAAf;;AASAlG,IAAA,0DAAAA,CAAGW,KAAH,CAASwC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAMkE,OAAN,EAAkB;AAC9C,UAAIlE,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQyB,QAAQC,QAAhB,CAAP;AACD,KAPD;AAQD,GA1BM,CAAP;AA2BD,CAnCM;;AAqCA,IAAM6B,kBAAkB,SAAlBA,eAAkB,QAAsB;AAAA,MAAnBL,YAAmB,SAAnBA,YAAmB;;AACnD,SAAO,IAAInD,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,+GAAN;;AAOAnD,IAAA,0DAAAA,CAAGW,KAAH,CAASwC,WAAT,EAAsBgD,YAAtB,EAAoC,UAAC3F,GAAD,EAAMkE,OAAN,EAAkB;AACpD,UAAIlE,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACwB,QAAQG,YAAb,EAA2B;AACzB,eAAO3B,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,SAAP;AACD,KAXD;AAYD,GApBM,CAAP;AAqBD,CAtBM;;AAwBA,IAAMwD,gBAAgB,SAAhBA,aAAgB,QAQvB;AAAA,MAPJN,YAOI,SAPJA,YAOI;AAAA,MANJJ,MAMI,SANJA,MAMI;AAAA,MALJC,UAKI,SALJA,UAKI;AAAA,MAJJC,UAII,SAJJA,UAII;AAAA,MAHJjC,OAGI,SAHJA,OAGI;AAAA,MAFJS,MAEI,SAFJA,MAEI;AAAA,MADJyB,YACI,SADJA,YACI;;AACJ,SAAO,IAAIlD,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,mQAAN;;AAaA,QAAMC,SAAS,CACb+C,YADa,EAEbJ,MAFa,EAGbC,UAHa,EAIbC,UAJa,EAKbjC,OALa,EAMbS,MANa,EAObyB,YAPa,CAAf;;AAUAlG,IAAA,0DAAAA,CAAGW,KAAH,CAASwC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAMiC,GAAN,EAAc;AAC1C,UAAIjC,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACT,IAAIoC,YAAT,EAAuB;AACrB,eAAO3B,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,SAAP;AACD,KAXD;AAYD,GApCM,CAAP;AAqCD,CA9CM;;AAgDA,IAAMyD,eAAe,SAAfA,YAAe,QAAgB;AAAA,MAAbjC,MAAa,SAAbA,MAAa;;AAC1C,SAAO,IAAIzB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,6IAAN;;AASAnD,IAAA,0DAAAA,CAAGW,KAAH,CAASwC,WAAT,EAAsBsB,MAAtB,EAA8B,UAACjE,GAAD,EAAM6C,IAAN,EAAe;AAC3C,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACG,KAAKC,MAAV,EAAkB;AAChB,eAAOJ,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,KAAK,CAAL,CAAR,CAAP;AACD,KAXD;AAYD,GAtBM,CAAP;AAuBD,CAxBM;;AA0BA,IAAMsD,kBAAkB,SAAlBA,eAAkB,GAAM;AACnC,SAAO,IAAI3D,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,kEAAN;;AAKAnD,IAAA,0DAAAA,CAAGW,KAAH,CAASwC,WAAT,EAAsB,UAAC3C,GAAD,EAAM6C,IAAN,EAAe;AACnC,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,IAAR,CAAP;AACD,KAPD;AAQD,GAdM,CAAP;AAeD,CAhBM,C;;;;;;;;;;;;;;;;;;ACzIP;AACA;;AAEA,IAAMhB,SAAS,uDAAAC,EAAf;;AAEAD,OAAOE,IAAP,CAAY,oBAAZ;AAAA,oLAAkC,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAC5BD,IAAIE,IAAJ,CAAS+B,MAAT,IAAmBjC,IAAIE,IAAJ,CAASkE,YAA5B,IAA4CpE,IAAIE,IAAJ,CAASwD,YADzB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAKX,kEAAkB1D,IAAIE,IAAtB,CALW;;AAAA;AAKtBuB,cALsB;AAAA;AAAA,mBAMP,kEAAkB,EAAE4C,iBAAiB5C,EAAnB,EAAlB,CANO;;AAAA;AAMtBmC,kBANsB;;;AAQ5B3D,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBC,uBAAS,oCAFU;AAGnBC,oBAAMuD;AAHa,aAArB;AAR4B;AAAA;;AAAA;AAAA;AAAA;;AAc5B3D,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAeC,SAAS,uBAAxB,EAArB;;AAd4B;AAAA;AAAA;;AAAA;AAiB9BH,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAeC,SAAS,aAAxB,EAArB;;AAjB8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlC;;AAAA;AAAA;AAAA;AAAA;;AAqBAP,OAAO8B,MAAP,CAAc,qCAAd;AAAA,qLAAqD,kBAAO3B,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAE9B,kEAAkBD,IAAIiB,MAAtB,CAF8B;;AAAA;AAE3C4C,gBAF2C;AAAA;AAAA,mBAG3C,qEAAqB7D,IAAIiB,MAAzB,CAH2C;;AAAA;;AAKjDhB,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBC,uBAAS,iCAFU;AAGnBC,oBAAMwD;AAHa,aAArB;AALiD;AAAA;;AAAA;AAAA;AAAA;AAW7CzD,mBAX6C,GAWnC,EAXmC;AAAA;AAAA,8CAa1C,GAb0C,yBAgB1C,GAhB0C;AAAA;;AAAA;AAc7CA,sBAAU,sBAAV;AAd6C;;AAAA;AAiB7CA,sBAAU,uBAAV;AAjB6C;;AAAA;AAoBjDH,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUC,gBAAV,EAAxB;;AApBiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArD;;AAAA;AAAA;AAAA;AAAA;;AAwBAP,OAAO+B,GAAP,CAAW,sBAAX;AAAA,qLAAmC,kBAAO5B,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEzB,mEAAmBD,IAAIE,IAAvB,CAFyB;;AAAA;AAAA;AAAA,mBAGV,kEAAkB;AACrCoE,4BAActE,IAAIE,IAAJ,CAASoE;AADc,aAAlB,CAHU;;AAAA;AAGzBV,kBAHyB;;;AAO/B3D,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBC,uBAAS,gCAFU;AAGnBC,oBAAMuD;AAHa,aAArB;AAP+B;AAAA;;AAAA;AAAA;AAAA;AAa3BxD,mBAb2B,GAajB,EAbiB;AAAA;AAAA,8CAexB,GAfwB,yBAkBxB,GAlBwB;AAAA;;AAAA;AAgB3BA,sBAAU,sBAAV;AAhB2B;;AAAA;AAmB3BA,sBAAU,uBAAV;AAnB2B;;AAAA;AAsB/BH,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUC,gBAAV,EAAxB;;AAtB+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnC;;AAAA;AAAA;AAAA;AAAA;;AA0BAP,OAAOkB,GAAP,CAAW,sCAAX;AAAA,qLAAmD,kBAAOf,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAE5B,kEAAkBD,IAAIiB,MAAtB,CAF4B;;AAAA;AAEzC4C,gBAFyC;;AAG/C5D,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBC,uBAAS,iCAFU;AAGnBC,oBAAMwD;AAHa,aAArB;AAH+C;AAAA;;AAAA;AAAA;AAAA;AAS3CzD,mBAT2C,GASjC,EATiC;AAAA;AAAA,8CAWxC,GAXwC,yBAcxC,GAdwC;AAAA;;AAAA;AAY3CA,sBAAU,sBAAV;AAZ2C;;AAAA;AAe3CA,sBAAU,uBAAV;AAf2C;;AAAA;AAkB/CH,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUC,gBAAV,EAAxB;;AAlB+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnD;;AAAA;AAAA;AAAA;AAAA;;AAsBAP,OAAOkB,GAAP,CAAW,wBAAX;AAAA,qLAAqC,kBAAOf,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEV,sEAFU;;AAAA;AAE3B6D,oBAF2B;;AAGjC7D,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBC,uBAAS,wCAFU;AAGnBC,oBAAMyD;AAHa,aAArB;AAHiC;AAAA;;AAAA;AAAA;AAAA;AAS7B1D,mBAT6B,GASnB,EATmB;AAAA;AAAA,8CAY1B,GAZ0B;AAAA;;AAAA;AAa7BA,sBAAU,uBAAV;AAb6B;;AAAA;;AAiBjCH,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,oBAAF,EAAUC,gBAAV,EAArB;;AAjBiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArC;;AAAA;AAAA;AAAA;AAAA;;AAqBA,yDAAeP,MAAf,E;;;;;;;;;;;;;ACvHA;;AAEO,IAAM0E,eAAe,SAAfA,YAAe,OAA4C;AAAA,MAAzCtC,MAAyC,QAAzCA,MAAyC;AAAA,MAAjCmC,YAAiC,QAAjCA,YAAiC;AAAA,MAAnBV,YAAmB,QAAnBA,YAAmB;;AACtE,SAAO,IAAIlD,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,wIAAN;;AAQA,QAAMC,SAAS,CAACqB,MAAD,EAASmC,YAAT,EAAuBV,YAAvB,CAAf;;AAEAlG,IAAA,0DAAAA,CAAGW,KAAH,CAASwC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAMkE,OAAN,EAAkB;AAC9C,UAAIlE,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQyB,QAAQC,QAAhB,CAAP;AACD,KAPD;AAQD,GAnBM,CAAP;AAoBD,CArBM;;AAuBA,IAAMqC,kBAAkB,SAAlBA,eAAkB,QAAyB;AAAA,MAAtBH,eAAsB,SAAtBA,eAAsB;;AACtD,SAAO,IAAI7D,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,qHAAN;;AAOAnD,IAAA,0DAAAA,CAAGW,KAAH,CAASwC,WAAT,EAAsB0D,eAAtB,EAAuC,UAACrG,GAAD,EAAMkE,OAAN,EAAkB;AACvD,UAAIlE,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACwB,QAAQG,YAAb,EAA2B;AACzB,eAAO3B,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,SAAP;AACD,KAXD;AAYD,GApBM,CAAP;AAqBD,CAtBM;;AAwBA,IAAMgE,gBAAgB,SAAhBA,aAAgB,QAKvB;AAAA,MAJJJ,eAII,SAJJA,eAII;AAAA,MAHJpC,MAGI,SAHJA,MAGI;AAAA,MAFJmC,YAEI,SAFJA,YAEI;AAAA,MADJV,YACI,SADJA,YACI;;AACJ,SAAO,IAAIlD,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,gMAAN;;AAUA,QAAMC,SAAS,CAACyD,eAAD,EAAkBpC,MAAlB,EAA0BmC,YAA1B,EAAwCV,YAAxC,CAAf;;AAEAlG,IAAA,0DAAAA,CAAGW,KAAH,CAASwC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAMiC,GAAN,EAAc;AAC1C,UAAIjC,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACT,IAAIoC,YAAT,EAAuB;AACrB,eAAO3B,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,SAAP;AACD,KAXD;AAYD,GAzBM,CAAP;AA0BD,CAhCM;;AAkCA,IAAMiE,eAAe,SAAfA,YAAe,QAAgB;AAAA,MAAbzC,MAAa,SAAbA,MAAa;;AAC1C,SAAO,IAAIzB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,gJAAN;;AASAnD,IAAA,0DAAAA,CAAGW,KAAH,CAASwC,WAAT,EAAsBsB,MAAtB,EAA8B,UAACjE,GAAD,EAAM6C,IAAN,EAAe;AAC3C,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACG,KAAKC,MAAV,EAAkB;AAChB,eAAOJ,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,KAAK,CAAL,CAAR,CAAP;AACD,KAXD;AAYD,GAtBM,CAAP;AAuBD,CAxBM;;AA0BA,IAAM8D,kBAAkB,SAAlBA,eAAkB,GAAM;AACnC,SAAO,IAAInE,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,2EAAN;;AAKAnD,IAAA,0DAAAA,CAAGW,KAAH,CAASwC,WAAT,EAAsB,UAAC3C,GAAD,EAAM6C,IAAN,EAAe;AACnC,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,IAAR,CAAP;AACD,KAPD;AAQD,GAdM,CAAP;AAeD,CAhBM,C","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a3e72457723c585f7f76","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 0\n// module chunks = 0","import mysql from 'mysql';\n\nconst db = mysql.createConnection({\n  host: 'localhost',\n  user: 'skydev',\n  password: 'skydev',\n  db: 'skydev',\n  dateStrings: true\n});\n\ndb.connect(err => {\n  if (err) {\n    console.log('Error in connecting to database');\n    console.log(err);\n  } else {\n    console.log('Success in connecting to database');\n  }\n});\n\ndb.query('USE skydev');\n\nexport default db;\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/index.js","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/regenerator/index.js\n// module id = 2\n// module chunks = 0","import express from 'express';\nimport bodyParser from 'body-parser';\nimport logger from 'morgan';\nimport session from 'express-session';\nimport store from 'express-mysql-session';\nimport db from './database';\nimport router from './router';\n\nconst app = express();\nconst MySQLStore = store(session);\nconst sessionStore = new MySQLStore({}, db);\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ encoded: true }));\napp.use(logger('dev'));\n\napp.use(\n  session({\n    key: 'skydev',\n    secret: 'skydev',\n    resave: true,\n    saveUninitialized: true,\n    store: sessionStore,\n    createDatabaseTable: true,\n    checkExpirationInterval: 900000,\n    expiration: 86400000\n  })\n);\n\napp.use(router);\n\nconst port = process.env.PORT || 3001;\n\nconst server = app.listen(port, () => {\n  console.log(`Server is running at port: ${port}`);\n});\n\nexport default server;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"morgan\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"morgan\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"express-session\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-session\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"express-mysql-session\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-mysql-session\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"mysql\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mysql\"\n// module id = 9\n// module chunks = 0","import { Router } from 'express';\n\n// put import routers here\nimport authRouter from './entities/auth/router';\nimport extensionRouter from './entities/extensions/router';\nimport publicationsRouter from './entities/publications/router';\n//import signupRouter from './entities/signup/router';\nimport studyRouter from './entities/studyload/router';\nimport teachRouter from './entities/teachload/router';\n\nconst router = Router();\n\n// put use statements here\nrouter.use('/', authRouter);\nrouter.use(extensionRouter);\nrouter.use(publicationsRouter);\n//router.use(signupRouter);\nrouter.use(studyRouter);\nrouter.use(teachRouter);\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/router.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/login', async (req, res) => {\n  try {\n    const user = await Ctrl.login(req.body);\n    req.session.user = user;\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully logged in',\n      data: user\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 500:\n        message = 'Internal server error while logging in';\n        break;\n      case 404:\n        message = 'Wrong credentials';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.post('/api/logout', (req, res) => {\n  req.session.user = null;\n  res.status(200).json({\n    status: 200,\n    message: 'Successfully logged out'\n  });\n});\n\nrouter.post('/api/session', (req, res) => {\n  res.status(200).json({\n    status: 200,\n    message: 'Successfully fetched current session',\n    data: req.session.user ? req.session.user : null\n  });\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/auth/router.js","module.exports = require(\"regenerator-runtime\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"regenerator-runtime\"\n// module id = 12\n// module chunks = 0","import db from '../../database';\n\nexport const login = ({ username, password }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      SELECT \n        *\n      FROM\n        EMPLOYEE\n      WHERE\n        username = BINARY ? and\n        password = BINARY ?\n    `;\n\n    const values = [username, password];\n\n    db.query(queryString, values, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/auth/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n// gets services\nrouter.get('/api/service', async (req, res) => {\n  try {\n    const services = await Ctrl.getServices();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all services',\n      data: services\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\n// get a service\nrouter.get('/api/service/:id', async (req, res) => {\n  try {\n    const service = await Ctrl.getService(req.params);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched service',\n      data: service\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Service not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// add a service\nrouter.post('/api/service', async (req, res) => {\n  if (\n    req.body.category &&\n    req.body.title &&\n    req.body.no_of_hours >= 0 &&\n    req.body.no_of_participants >= 0 &&\n    req.body.role &&\n    req.body.credits >= 0\n  ) {\n    try {\n      const id = await Ctrl.addService(req.body);\n      const serviceAdded = await Ctrl.getService({ id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created sample',\n        data: serviceAdded\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n// removes a service\nrouter.delete('/api/service/:id', async (req, res) => {\n  try {\n    const service = await Ctrl.getService(req.params);\n    await Ctrl.removeService(req.params);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed sample',\n      data: service\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Cannot Delete: Service not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n\n// edits a service\nrouter.put('/api/service/', async (req, res) => {\n  try {\n    await Ctrl.editService(req.body);\n    const serviceEdited = await Ctrl.getService({ id: req.body.id });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited service',\n      data: serviceEdited\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Service not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n// WEBPACK FOOTER //\n// ./src/entities/extensions/router.js","import db from '../../database';\n\n// gets a service\nexport const getService = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            SERVICE\n          WHERE\n            service_id = ?\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// gets all services\nexport const getServices = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      SELECT *\n      FROM SERVICE\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// adds a service\nexport const addService = ({\n  category,\n  title,\n  no_of_hours,\n  no_of_participants,\n  role,\n  credits,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n            INSERT INTO sample\n            VALUES (DEFAULT, ?, ?, ?, ?, ?, ?, ?)\n        `;\n\n    const values = [\n      category,\n      title,\n      no_of_hours,\n      no_of_participants,\n      role,\n      credits,\n      emp_id\n    ];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// removes a service\nexport const removeService = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      DELETE \n        FROM SERVICE\n      WHERE \n        service_id = ?\n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// edits a sample\nexport const editService = ({\n  category,\n  title,\n  no_of_hours,\n  no_of_participants,\n  role,\n  credits\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      UPDATE sample\n      SET\n        category = ?,\n        title = ?,\n        no_of_hours = ?,\n        no_of_participants = ?,\n        role = ?,\n        credits = ?\n      WHERE\n        service_id = ?\n    `;\n\n    const values = [\n      category,\n      title,\n      no_of_hours,\n      no_of_participants,\n      role,\n      credits\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/extensions/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n// gets a publication by id\nrouter.get('/api/publication/:id', async (req, res) => {\n  try {\n    const publication = await Ctrl.getPublication(req.params);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched publication',\n      data: publication\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Publication not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// gets publications\nrouter.get('/api/publication', async (req, res) => {\n  try {\n    const publications = await Ctrl.getPublications();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all publications',\n      data: publications\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\n\n// add a publication\nrouter.post('/api/publication', async (req, res) => {\n  if (\n    req.body.credit_units >=0 &&\n    req.body.category &&\n    req.body.funding &&\n    req.body.title &&\n    req.body.role &&\n    req.body.start_date &&\n    req.body.end_date\n  ) {\n    try {\n      const id = await Ctrl.addPublication(req.body);\n      const publication = await Ctrl.getPublication({ id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created publication',\n        data: publication\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n// add a coworker\nrouter.post('/api/publication', async (req, res) => {\n  if (\n    req.body.publication_id\n  ) {\n    try {\n      await Ctrl.addCoworker(req.body);\n      const row = Ctrl.checkIfExisting(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully added coworker',\n        data: row\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n// removes a publication\nrouter.delete('/api/publication/:id', async (req, res) => {\n  try {\n    const publication = await Ctrl.getPublication(req.params);\n    await Ctrl.removePublication(req.params);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed publication',\n      data: publication\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Publication not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n\n// edits a publication\nrouter.put('/api/publication/', async (req, res) => {\n  try {\n    await Ctrl.editPublication(req.body);\n    const publication = await Ctrl.getPublication({ id: req.body.id });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited publication',\n      data: publication\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Publication not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/publications/router.js","import db from '../../database';\n\n// gets a publication by id\nexport const getPublication = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            PUBLICATION\n          WHERE\n            publication_id = ?\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// gets all publications\nexport const getPublications = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      SELECT *\n      FROM PUBLICATION\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// adds a publication\nexport const addPublication = ({\n  credit_units,\n  category,\n  funding,\n  title,\n  role,\n  start_date,\n  end_date,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n            INSERT INTO PUBLICATION\n            VALUES (DEFAULT, ?, ?, ?, ?, ?, ?, ?, ?)\n        `;\n\n    const values = [\n      credit_units,\n      category,\n      funding,\n      title,\n      role,\n      start_date,\n      end_date,\n      emp_id\n    ];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// adds a coworker\nexport const addCoworker = ({ publication_id, coworker_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n            INSERT INTO COWORKER\n            VALUES (?, ?)\n        `;\n\n    const values = [publication_id, coworker_id];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// checks if publication_id and coworker_id exists\nexport const checkIfExisting = ({ publication_id, coworker_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n            SELECT * \n            FROM COWORKER\n            WHERE\n            publication_id = ? AND coworker_id = ?\n        `;\n\n    const values = [publication_id, coworker_id];\n\n    db.query(queryString, values, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// removes a publication\nexport const removePublication = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      DELETE \n        FROM PUBLICATION\n      WHERE \n        publication_id = ?\n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// edits a publication\nexport const editPublication = ({\n  credit_units,\n  category,\n  funding,\n  title,\n  role,\n  start_date,\n  end_date\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      UPDATE PUBLICATION\n      SET\n        credit_units = ?,\n        category = ?,\n        funding = ?,\n        title = ?,\n        role = ?,\n        start_date = ?,\n        end_date = ?\n      WHERE\n        publication_id = ?\n    `;\n\n    const values = [\n      credit_units,\n      category,\n      funding,\n      title,\n      role,\n      start_date,\n      end_date\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/publications/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/studyload/add', async (req, res) => {\n  if (\n    req.body.degree &&\n    req.body.university &&\n    req.body.isFullTime &&\n    req.body.credits &&\n    req.body.emp_id &&\n    req.body.subject_code\n  ) {\n    try {\n      // await Ctrl.checkUser(req.body.empNo);\n      // this checks if the empno is already assigned to a faculty\n      const id = await Ctrl.addStudyLoad(req.body);\n      const sample = await Ctrl.getStudyLoad({ studyload_id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created study load',\n        data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.delete('/api/studyload/delete/:studyload_id', async (req, res) => {\n  try {\n    const book = await Ctrl.getStudyLoad(req.params);\n    await Ctrl.removeStudyLoad(req.params);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed study load',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Study Load not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.put('/api/studyload/edit', async (req, res) => {\n  try {\n    await Ctrl.editStudyLoad(req.body);\n    const sample = await Ctrl.getStudyLoad({\n      studyload_id: req.body.studyload_id\n    });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited study load',\n      data: sample\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Study load not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.get('/api/studyload/view/:studyload_id', async (req, res) => {\n  try {\n    const book = await Ctrl.getStudyLoad(req.params);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched study load',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Study load not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.get('/api/studyload/viewAll', async (req, res) => {\n  try {\n    const subjects = await Ctrl.getAllStudyLoad();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all studyload',\n      data: subjects\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/studyload/router.js","import db from '../../database';\n\nexport const addStudyLoad = ({\n  degree,\n  university,\n  isFullTime,\n  credits,\n  emp_id,\n  subject_code\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      INSERT INTO\n      STUDYLOAD\n      (degree, university, isFullTime, credits, emp_id, subject_code)\n      VALUES\n      (?, ?, ?, ?, ?, ?)\n    `;\n\n    const values = [\n      degree,\n      university,\n      isFullTime,\n      credits,\n      emp_id,\n      subject_code\n    ];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\nexport const removeStudyLoad = ({ studyload_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        DELETE \n          FROM STUDYLOAD\n        WHERE \n          studyload_id = ?\n      `;\n\n    db.query(queryString, studyload_id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const editStudyLoad = ({\n  studyload_id,\n  degree,\n  university,\n  isFullTime,\n  credits,\n  emp_id,\n  subject_code\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        UPDATE STUDYLOAD\n        SET\n          degree = ?,\n          university = ?,\n          isFullTime = ?,\n          credits = ?,\n          emp_id = ?, \n          subject_code = ?\n        WHERE\n          studyload_id = ?\n      `;\n\n    const values = [\n      studyload_id,\n      degree,\n      university,\n      isFullTime,\n      credits,\n      emp_id,\n      subject_code\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const getStudyLoad = ({ emp_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            STUDYLOAD\n          WHERE\n            emp_id = ?\n        `;\n\n    db.query(queryString, emp_id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\nexport const getAllStudyLoad = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        SELECT *\n        FROM STUDYLOAD\n      `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/studyload/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/teachload/add', async (req, res) => {\n  if (req.body.emp_id && req.body.noOfStudents && req.body.subject_code) {\n    try {\n      // await Ctrl.checkUser(req.body.empNo);\n      // this checks if the empno is already assigned to a faculty\n      const id = await Ctrl.addTeachLoad(req.body);\n      const sample = await Ctrl.getTeachLoad({ teachingload_id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created teaching load',\n        data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.delete('/api/teachload/delete/:teachload_id', async (req, res) => {\n  try {\n    const book = await Ctrl.getTeachLoad(req.params);\n    await Ctrl.removeTeachLoad(req.params);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed teach load',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Teach Load not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.put('/api/teachload/edit/', async (req, res) => {\n  try {\n    await Ctrl.editTeachLoad(req.body);\n    const sample = await Ctrl.getTeachLoad({\n      teachload_id: req.body.teachload_id\n    });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited teach load',\n      data: sample\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Teach load not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.get('/api/teachload/view/:teachingload_id', async (req, res) => {\n  try {\n    const book = await Ctrl.getTeachLoad(req.params);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched teach load',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Teach load not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.get('/api/teachload/viewAll', async (req, res) => {\n  try {\n    const subjects = await Ctrl.getAllTeachLoad();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all teaching load',\n      data: subjects\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/teachload/router.js","import db from '../../database';\n\nexport const addTeachLoad = ({ emp_id, noOfStudents, subject_code }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      INSERT INTO\n      TEACHINGLOAD\n      (emp_id, noOfStudents, subject_code)\n      VALUES\n      (?, ?, ?)\n    `;\n\n    const values = [emp_id, noOfStudents, subject_code];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\nexport const removeTeachLoad = ({ teachingload_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        DELETE \n          FROM TEACHINGLOAD\n        WHERE \n          teachingload_id = ?\n      `;\n\n    db.query(queryString, teachingload_id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const editTeachLoad = ({\n  teachingload_id,\n  emp_id,\n  noOfStudents,\n  subject_code\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        UPDATE TEACHINGLOAD\n        SET\n          noOfStudents = ?,\n          emp_id = ?,\n          subject_code = ?\n        WHERE\n          teachingload_id = ?\n      `;\n\n    const values = [teachingload_id, emp_id, noOfStudents, subject_code];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const getTeachLoad = ({ emp_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            TEACHINGLOAD\n          WHERE\n            emp_id = ?\n        `;\n\n    db.query(queryString, emp_id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\nexport const getAllTeachLoad = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT *\n          FROM TEACHINGLOAD\n        `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/teachload/controller.js"],"sourceRoot":""}